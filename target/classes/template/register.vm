<html>
<head>
    <title>在线测试系统注册</title>
    <meta http-equiv="content-type" content="text/html;charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="/asset/bootstrap/css/bootstrap.min.css"/>
    <link type="text/css" rel="stylesheet" href="/asset/bootstrap/css/bootstrap-theme.min.css"/>
    <link type="text/css" rel="stylesheet" href="/css/simplePagination.css"/>
    <link rel="stylesheet" type="text/css" href="/css/style.css"/>
    <link rel="stylesheet" type="text/css" href="/css/36kr.css"/>
    
    <script type="text/javascript" src="/asset/jquery/jquery-1.11.2.min.js"/>
    <script type="text/javascript" src="/asset/jquery/jquery.simplePagination.js"/>
    <script type="text/javascript" src="/asset/jquery/jquery.md5.js"/>
    <script type="text/javascript" src="/asset/bootstrap/js/bootstrap.min.js"/>
    <script type="text/javascript" src="/js/particles.js"/>
    <script src="http://static.geetest.com/static/tools/gt.js"/>
    <script type="text/javascript" src="/asset/qiniuyun/plupload.dev.js"/>
    <script type="text/javascript" src="/asset/qiniuyun/moxie.js"/>
    <script type="text/javascript" src="/asset/qiniuyun/qiniu.js"/>
    <script type="text/javascript" src="/js/register.js"/>
    <script>
        function md5password() {
            if ($("#password").val().textTrim === "" || $("#username").val().textTrim === "") {
                $("#submit_btn").attr("disabled", 'disabled');
                return false;
            }
            $("#password").val($.md5($("#password").val()));
            return true;
        }
    </script>
</head>
<body>
<div id="particles-js"></div>
<section class="wrapper">
    <div align="center">
        <div style="color: black;font-size: 30px;align-content: center">在线测试系统注册</div>
        <br/>
        <form method="post" action="/register" onsubmit="return md5password();">
            <div style="color: black;font-size: 15px">用&nbsp;&nbsp;户&nbsp;&nbsp;名：
                <input id="username" style="padding: 0px" name="username" placeholder="请输入用户名" type="text"/>
            </div>
            <div style="color: black;font-size: 15px">密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码：
                <input id="password" style="padding: 0px" name="password" placeholder="请输入密码" type="password"/>
            </div>
            <div style="color: black;font-size: 15px">确认密码：
                <input id="password2" style="padding: 0px" name="password2" placeholder="请再次输入密码" type="password"/>
            </div>
            <div style="color: black;font-size: 15px">手&nbsp;&nbsp;机&nbsp;&nbsp;号：
                <input id="phone" style="padding: 0px" name="phone" placeholder="请输入手机号" type="text"/>
            </div>
            <div style="color: black;font-size: 15px">邮&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;箱：
                <input id="email" style="padding: 0px;margin-bottom: 10px" name="email" placeholder="请输入邮箱" type="email"/>
            </div>
            <div style="color: black;font-size: 15px">微&nbsp;&nbsp;信&nbsp;&nbsp;号：
                <input id="wechat" style="padding: 0px" name="wechat" placeholder="请输入用户名" type="text"/>
            </div>
            <div id="avatar_container" style="color: black;font-size: 15px;margin-bottom: 10px">上传头像：
                <a class="btn btn-default btn-lg " id="avatar" href="#" >
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>选择文件</span>
                </a>
            </div>
            <div style="color: black;font-size: 15px">个人简介：
                <input id="intro" style="padding: 0px" name="intro" placeholder="请简单介绍一下自己" type="text"/>
            </div>

            <div id="captcha"></div>
            <br/>
            <input id="submit_btn" class="btn input-submit" disabled="disabled" type="submit" value="登陆"
                   style="width: 70%;background-color:#fff;color: #0f0f0f;font-size: 15px"/>
        </form>
    </div>
</section>

<script>
    particlesJS("particles-js", {
        particles: {
            color: "#46BCF3",
            shape: "circle",
            opacity: 1,
            size: 1,
            size_random: !0,
            nb: 200,
            line_linked: {
                enable_auto: !0,
                distance: 100,
                color: "#46BCF3",
                opacity: .4,
                width: 1,
                condensed_mode: {enable: !1, rotateX: 600, rotateY: 600}
            },
            anim: {enable: !0, speed: 2.5}
        },
        interactivity: {
            enable: !0,
            mouse: {distance: 250},
            detect_on: "canvas",
            mode: "grab",
            line_linked: {opacity: .35},
            events: {onclick: {enable: !0, mode: "push", nb: 3}}
        },
        retina_detect: !0
    });
</script>
<script>
    $.ajax({
        // 获取id，challenge，success（是否启用failback）
        url: "/api/",
        type: "get",
        dataType: "json", // 使用jsonp格式
        success: function (data) {
            // 使用initGeetest接口
            // 参数1：配置参数，与创建Geetest实例时接受的参数一致
            // 参数2：回调，回调的第一个参数验证码对象，之后可以使用它做appendTo之类的事件
            initGeetest({
                gt: data.data.gt,
                challenge: data.data.challenge,
                product: "embed", // 产品形式
                offline: !data.data.success
            }, function (captchaObj) {
                // 将验证码加到id为captcha的元素里
                captchaObj.appendTo("#captcha");
                captchaObj.onSuccess(function () {
                    $("#submit_btn").removeAttr("disabled");
                });
                captchaObj.refresh(function () {
                    $("#submit_btn").attr("disabled", 'disabled');
                });
                captchaObj.onRefresh(function () {
                    $("#submit_btn").attr("disabled", 'disabled');
                });
                captchaObj.onFail(function () {
                    $("#submit_btn").attr("disabled", 'disabled');
                });
            });
        }
    });
</script>

<script>
    var uploader = Qiniu.uploader({
        runtimes: 'html5,flash,html4',    //上传模式,依次退化
        browse_button: 'avatar',       //上传选择的点选按钮，**必需**
        //uptoken_url: '/token',
        //Ajax请求upToken的Url，**强烈建议设置**（服务端提供）
        uptoken: '72bv1OHYgn4I8drbTFOr8e4-lv3Hu329VLnv8c6X:oFHVRmr-93nWK4y1fwDWy9GO9pQ=:eyJzY29wZSI6InNwYWNlIiwiZGVhZGxpbmUiOjE0NTYxMDA3NTJ9',
        //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
        // unique_names: true,
        // 默认 false，key为文件名。若开启该选项，SDK会为每个文件自动生成key（文件名）
        // save_key: true,
        // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理
        domain: '7xo04n.com1.z0.glb.clouddn.com',
        //bucket 域名，下载资源时用到，**必需**
        container: 'avatar_div',           //上传区域DOM ID，默认是browser_button的父元素，
        max_file_size: '2mb',           //最大文件体积限制
        flash_swf_url: 'js/plupload/Moxie.swf',  //引入flash,相对路径
        max_retries: 3,                   //上传失败最大重试次数
        dragdrop: true,                   //开启可拖曳上传
        drop_element: 'avatar',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
        chunk_size: '1mb',                //分块上传时，每片的体积
        auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
        init: {
            'FilesAdded': function (up, files) {
                plupload.each(files, function (file) {
                    // 文件添加进队列后,处理相关的事情
                });
            },
            'BeforeUpload': function (up, file) {
                // 每个文件上传前,处理相关的事情
            },
            'UploadProgress': function (up, file) {
                // 每个文件上传时,处理相关的事情
            },
            'FileUploaded': function (up, file, info) {
                // 每个文件上传成功后,处理相关的事情
                // 其中 info 是文件上传成功后，服务端返回的json，形式如
                // {
                //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
                //    "key": "gogopher.jpg"
                //  }
                // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html
                var domain = up.getOption('domain');
                var res = parseJSON(info);
                var sourceLink = domain + res.key; //获取上传成功后的文件的Url
            },
            'Error': function (up, err, errTip) {
                //上传出错时,处理相关的事情
            },
            'UploadComplete': function () {
                //队列文件处理完毕后,处理相关的事情
            },
            'Key': function (up, file) {
                // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
                // 该配置必须要在 unique_names: false , save_key: false 时才生效
                var key = "";
                // do something with key here
                return key
            }
        }
    });
    // domain 为七牛空间（bucket)对应的域名，选择某个空间后，可通过"空间设置->基本设置->域名设置"查看获取
    // uploader 为一个plupload对象，继承了所有plupload的方法，参考http://plupload.com/docs
</script>
</body>
</html>
